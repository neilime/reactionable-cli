const template = `{{#> Component }}
{{#*inline "imports-block"}}
import { lazy } from 'react';
import { Link, useRouteMatch } from 'react-router-dom';
import { generatePath } from '@reactionable/core';
import { List } from '{{ uiPackage }}';
import { useQueryList } from '{{ hostingPackage }}';
import { I{{ entityName }}Data, IList{{ entitiesName }}QueryVariables } from '../{{ entitiesName }}Config';
const Create{{ entityName }} = lazy(() => import('../create-{{hyphenize entityName }}/Create{{ entityName }}'));
const Delete{{ entityName }} = lazy(() => import('../delete-{{hyphenize entityName }}/Delete{{ entityName }}'));
{{/inline}}
{{#*inline "pre-render-block"}}const match = useRouteMatch();

  const { data, refetch, next, previous, ...listProps } = useQueryList<I{{ entityName }}Data, IList{{ entitiesName }}QueryVariables>({
  });

  const renderChildren = (data: I{{ entityName }}Data) => <tr key={'{{ entityName }}-' + data.id}>
    <td>
      <Link
        to={generatePath(\`\${match.path}/:{{decapitalize entitiesName }}Id\`, { ...match.params, {{decapitalize entitiesName }}Id: data.id })}
        title={t('Go to {{decamelize entityName }} "\\{{label}}"', data)}
      >{data.label}</Link>
    </td>
    <td>
      <Link
        to={generatePath(\`\${match.path}/:{{decapitalize entitiesName }}Id\`, { ...match.params, {{decapitalize entitiesName }}Id: data.id })}
        title={t('Go to {{decamelize entityName }} "\\{{label}}"', data)}
      >{t('Go to {{decamelize entityName }} "\\{{label}}"', data)}</Link>
      <Delete{{ entityName }} id={data.id} onSuccess={refetch}>
        {t('Delete {{decamelize entityName }} "\\{{label}}"', data)}
      </Delete{{ entityName }}>
    </td>
  </tr>;
{{/inline}}
{{#*inline "render-block"}}<Link disabled={!previous} title={t('Load the previous {{decamelize entitiesName }}')}>{t('Previous')}</Link>
    <Link disabled={!next} title={t('Load the next {{decamelize entitiesName }}')}>{t('Next')}</Link>
    <List<I{{ entityName }}Data>
      {...listProps}
      data={data}
      head={[t('Label'), t('Actions')]}
      children={renderChildren}
      noData={<>
        <br /> <br />
        {t('You don\\'t have any {{decamelize entitiesName }} yet')}
        <br />
        {t('Click the button to create a new {{decamelize entityName }}')}
        <br /><br />
        <Create{{ entityName }} onSuccess={refetch}>
          <Link>{t('Create a new {{decamelize entityName }}')}</Link>
        </Create{{ entityName }}>
      </>}
    />{{/inline}}
{{/Component}}`;
module.exports = template;
